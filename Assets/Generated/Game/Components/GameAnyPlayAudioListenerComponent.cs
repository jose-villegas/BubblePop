//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyPlayAudioListenerComponent anyPlayAudioListener { get { return (AnyPlayAudioListenerComponent)GetComponent(GameComponentsLookup.AnyPlayAudioListener); } }
    public bool hasAnyPlayAudioListener { get { return HasComponent(GameComponentsLookup.AnyPlayAudioListener); } }

    public void AddAnyPlayAudioListener(System.Collections.Generic.List<IAnyPlayAudioListener> newValue) {
        var index = GameComponentsLookup.AnyPlayAudioListener;
        var component = (AnyPlayAudioListenerComponent)CreateComponent(index, typeof(AnyPlayAudioListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyPlayAudioListener(System.Collections.Generic.List<IAnyPlayAudioListener> newValue) {
        var index = GameComponentsLookup.AnyPlayAudioListener;
        var component = (AnyPlayAudioListenerComponent)CreateComponent(index, typeof(AnyPlayAudioListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyPlayAudioListener() {
        RemoveComponent(GameComponentsLookup.AnyPlayAudioListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyPlayAudioListener;

    public static Entitas.IMatcher<GameEntity> AnyPlayAudioListener {
        get {
            if (_matcherAnyPlayAudioListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyPlayAudioListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyPlayAudioListener = matcher;
            }

            return _matcherAnyPlayAudioListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyPlayAudioListener(IAnyPlayAudioListener value) {
        var listeners = hasAnyPlayAudioListener
            ? anyPlayAudioListener.value
            : new System.Collections.Generic.List<IAnyPlayAudioListener>();
        listeners.Add(value);
        ReplaceAnyPlayAudioListener(listeners);
    }

    public void RemoveAnyPlayAudioListener(IAnyPlayAudioListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyPlayAudioListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyPlayAudioListener();
        } else {
            ReplaceAnyPlayAudioListener(listeners);
        }
    }
}
