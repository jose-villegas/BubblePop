//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity bubbleSlotLimitsIndexEntity { get { return GetGroup(GameMatcher.BubbleSlotLimitsIndex).GetSingleEntity(); } }
    public BubbleSlotLimitsIndexComponent bubbleSlotLimitsIndex { get { return bubbleSlotLimitsIndexEntity.bubbleSlotLimitsIndex; } }
    public bool hasBubbleSlotLimitsIndex { get { return bubbleSlotLimitsIndexEntity != null; } }

    public GameEntity SetBubbleSlotLimitsIndex(int newMaximumVertical, int newMinimumVertical) {
        if (hasBubbleSlotLimitsIndex) {
            throw new Entitas.EntitasException("Could not set BubbleSlotLimitsIndex!\n" + this + " already has an entity with BubbleSlotLimitsIndexComponent!",
                "You should check if the context already has a bubbleSlotLimitsIndexEntity before setting it or use context.ReplaceBubbleSlotLimitsIndex().");
        }
        var entity = CreateEntity();
        entity.AddBubbleSlotLimitsIndex(newMaximumVertical, newMinimumVertical);
        return entity;
    }

    public void ReplaceBubbleSlotLimitsIndex(int newMaximumVertical, int newMinimumVertical) {
        var entity = bubbleSlotLimitsIndexEntity;
        if (entity == null) {
            entity = SetBubbleSlotLimitsIndex(newMaximumVertical, newMinimumVertical);
        } else {
            entity.ReplaceBubbleSlotLimitsIndex(newMaximumVertical, newMinimumVertical);
        }
    }

    public void RemoveBubbleSlotLimitsIndex() {
        bubbleSlotLimitsIndexEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BubbleSlotLimitsIndexComponent bubbleSlotLimitsIndex { get { return (BubbleSlotLimitsIndexComponent)GetComponent(GameComponentsLookup.BubbleSlotLimitsIndex); } }
    public bool hasBubbleSlotLimitsIndex { get { return HasComponent(GameComponentsLookup.BubbleSlotLimitsIndex); } }

    public void AddBubbleSlotLimitsIndex(int newMaximumVertical, int newMinimumVertical) {
        var index = GameComponentsLookup.BubbleSlotLimitsIndex;
        var component = (BubbleSlotLimitsIndexComponent)CreateComponent(index, typeof(BubbleSlotLimitsIndexComponent));
        component.MaximumVertical = newMaximumVertical;
        component.MinimumVertical = newMinimumVertical;
        AddComponent(index, component);
    }

    public void ReplaceBubbleSlotLimitsIndex(int newMaximumVertical, int newMinimumVertical) {
        var index = GameComponentsLookup.BubbleSlotLimitsIndex;
        var component = (BubbleSlotLimitsIndexComponent)CreateComponent(index, typeof(BubbleSlotLimitsIndexComponent));
        component.MaximumVertical = newMaximumVertical;
        component.MinimumVertical = newMinimumVertical;
        ReplaceComponent(index, component);
    }

    public void RemoveBubbleSlotLimitsIndex() {
        RemoveComponent(GameComponentsLookup.BubbleSlotLimitsIndex);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBubbleSlotLimitsIndex;

    public static Entitas.IMatcher<GameEntity> BubbleSlotLimitsIndex {
        get {
            if (_matcherBubbleSlotLimitsIndex == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BubbleSlotLimitsIndex);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBubbleSlotLimitsIndex = matcher;
            }

            return _matcherBubbleSlotLimitsIndex;
        }
    }
}
