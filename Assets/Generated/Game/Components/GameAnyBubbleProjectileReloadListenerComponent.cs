//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyBubbleProjectileReloadListenerComponent anyBubbleProjectileReloadListener { get { return (AnyBubbleProjectileReloadListenerComponent)GetComponent(GameComponentsLookup.AnyBubbleProjectileReloadListener); } }
    public bool hasAnyBubbleProjectileReloadListener { get { return HasComponent(GameComponentsLookup.AnyBubbleProjectileReloadListener); } }

    public void AddAnyBubbleProjectileReloadListener(System.Collections.Generic.List<IAnyBubbleProjectileReloadListener> newValue) {
        var index = GameComponentsLookup.AnyBubbleProjectileReloadListener;
        var component = (AnyBubbleProjectileReloadListenerComponent)CreateComponent(index, typeof(AnyBubbleProjectileReloadListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyBubbleProjectileReloadListener(System.Collections.Generic.List<IAnyBubbleProjectileReloadListener> newValue) {
        var index = GameComponentsLookup.AnyBubbleProjectileReloadListener;
        var component = (AnyBubbleProjectileReloadListenerComponent)CreateComponent(index, typeof(AnyBubbleProjectileReloadListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyBubbleProjectileReloadListener() {
        RemoveComponent(GameComponentsLookup.AnyBubbleProjectileReloadListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyBubbleProjectileReloadListener;

    public static Entitas.IMatcher<GameEntity> AnyBubbleProjectileReloadListener {
        get {
            if (_matcherAnyBubbleProjectileReloadListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyBubbleProjectileReloadListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyBubbleProjectileReloadListener = matcher;
            }

            return _matcherAnyBubbleProjectileReloadListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyBubbleProjectileReloadListener(IAnyBubbleProjectileReloadListener value) {
        var listeners = hasAnyBubbleProjectileReloadListener
            ? anyBubbleProjectileReloadListener.value
            : new System.Collections.Generic.List<IAnyBubbleProjectileReloadListener>();
        listeners.Add(value);
        ReplaceAnyBubbleProjectileReloadListener(listeners);
    }

    public void RemoveAnyBubbleProjectileReloadListener(IAnyBubbleProjectileReloadListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyBubbleProjectileReloadListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyBubbleProjectileReloadListener();
        } else {
            ReplaceAnyBubbleProjectileReloadListener(listeners);
        }
    }
}
